"0","set.seed(18032019)"
"0","gensnoise <- expand.grid(noise,generators)"
"0","adding_noise <- function(pfm, noise){"
"0","  pfm$noise <- TRUE"
"0","  pfm$noiseParams <- noise"
"0","  return(pfm)"
"0","}"
"0","generated <- mcmapply(adding_noise, gensnoise[,2], gensnoise[,1], SIMPLIFY = FALSE)"
"0","generating_instances <- function(pfm){"
"0","  list <- rep(list(pfm), NOS)"
"0","  "
"0","  gen <- function(pfm){"
"0","    pfm$data$PC_gen <- PsyMetFuns::noisedPredict(pfm, pfm$data$predictor,   unlist(pfm$noiseParams[1]), unlist(pfm$noiseParams[2]), unlist(pfm$noiseParams[3])) "
"0","    pfm$data$PC_gen <- round(pfm$data$PC_gen * pfm$data$observations) / pfm$data$observations #rounding"
"0","    pfm$formula <- as.formula(c(PC_gen, observations) ~ predictor)"
"0","    pfm$data$noiseType <- unlist(pfm$noiseParams[1])"
"0","    pfm$data$noise_mean <- as.factor(unlist(pfm$noiseParams[2]))"
"0","    pfm$data$noise_sd <- as.factor(unlist(pfm$noiseParams[3]))"
"0","    pfm$data$log_likelihood_gen_noised <- PsyMetFuns:::log_likelihood(pfm)"
"0","    pfm$data$log_likelihood_ratio_gen_noised <- PsyMetFuns:::log_likRatio(pfm)"
"0","    pfm$data$pearson_x_gen_noised <- PsyMetFuns:::pearsonx(pfm)"
"0","    return(pfm)"
"0","  }"
"0","  list <- lapply(list, gen)"
"0","  "
"0","  return(list)"
"0","}"
"0","  cat(""Beginning of computation at:"", "" "", date(), ""\n"", sep="""")"
"1","Beginning of computation at:"
"1"," "
"1","Thu May 30 20:56:08 2019"
"1","
"
"0","  generated <- unlist(mclapply(generated, generating_instances), recursive = FALSE)"
